events {}

http {

	include /etc/nginx/mime.types;

	server {

		listen 5000 ssl;
		ssl_protocols TLSv1.3;
		ssl_prefer_server_ciphers on;
		ssl_certificate /etc/nginx/ssl/transcendence.crt;
		ssl_certificate_key /etc/nginx/ssl/transcendence.key;

		root /var/www/html;
		index index.html index.htm;

		location / {
			try_files $uri $uri/ = 404;
		}

		location /api/ {
			proxy_pass http://todo:8000/api/;
			proxy_http_version 1.1;
			# proxy_set_header Upgrade $http_upgrade;  # websocket
			# proxy_set_header Connection "upgrade";   #websockets
			# add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
			add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
			# add_header 'Access-Control-Allow-Origin' '*';

			 if ($request_method = 'OPTIONS') {
        # add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
        return 204;
    }
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}



	}

}
